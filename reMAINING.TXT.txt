✅ Project Requirements Summary

1️⃣ Payment Gateway Integration
🔁 Replace PayPal with Razorpay as the primary payment gateway.
✔️ Ensure Razorpay supports:

Secure transactions

User-friendly payment UI

Order confirmation and failure handling

Webhooks for real-time payment status updates

2️⃣ Image Upload and Real-Time Display
🖼️ Implement image upload functionality (e.g., for prescriptions)
💾 Store uploaded images in a secure server or cloud storage
🔄 Enable real-time retrieval and display using WebSocket (Socket.IO) or polling

3️⃣ Location-Based Order Distribution
📍 Use latitude and longitude (geo-coordinates) to:

Assign orders to nearby medical stores or delivery partners

Enable accurate delivery coverage

Implement distance-based sorting of medical stores

4️⃣ User Registration and Role Management
📱 Register users using mobile number authentication
🧑‍💼 Add user roles:

Admin (for managing orders, stores, etc.)

User (for placing orders)
📦 Add a role field in the user schema and enforce access control accordingly

5️⃣ In-App Notifications
🔔 Integrate a notification API service to send:

Order updates (placed, accepted, out for delivery, delivered)

Prescription approval or rejection

Payment confirmations
📲 Support push notifications and in-app toast messages (on mobile too)

6️⃣ Data Handling via Elasticsearch
⚡ Use Elasticsearch for:

Fast and efficient full-text search

Storing user orders, chat history (if applicable), medicine data

Filtering and sorting of search results

7️⃣ Order Splitting
✂️ Implement order split logic when:

Items are not available in a single store

Parts of the order need to be fulfilled by multiple vendors
📦 Reflect split order tracking in both user and admin dashboards

8️⃣ Search Functionality
🔍 Enable users to:

Search medicines by name, category, or salt composition

Search/filter by medical store availability, location, or rating
🔎 Use Elasticsearch backend for optimized search

9️⃣ Porter API Integration
🚚 Integrate Porter API at launch for:

Real-time delivery assignment

Live order tracking

Delivery partner details visible to users

🔟 Discussion Points
🤝 Coordinate with Porter team and third-party providers for:

API onboarding

Pricing and billing integration

1️⃣1️⃣ Pharmacist Call Functionality
📞 Allow pharmacists to call users directly for:

Delivery coordination

Prescription confirmation
📲 Use a phone call API or dialer trigger in the pharmacist/admin dashboard

1️⃣2️⃣ Order Confirmation in User UI
🧾 Show users a confirmation screen after placing the order:

Product summary, price, prescription (if any), and delivery info
✅ Confirmation should appear on both web and mobile
🧾 Option to view/download invoice or see order history

1️⃣3️⃣ Real-Time Order Tracking (User Side)
📡 Enable real-time status updates:

Placed → Accepted → Out for delivery → Delivered
⚙️ Powered by Socket.IO and Porter live tracking
📍 Show a progress stepper or tracking card in the order detail screen



